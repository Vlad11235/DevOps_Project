#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("create docker image") {
            steps {
                echo "============== start building image =================="
                sh "ls -la ${pwd()}"
                dir ('docker') {
                	sh 'docker build -t blog:latest . '
                    sh 'docker run --name blog -d -p 8000:5000 --rm blog:latest'
                }
            }
        }
        
        stage("Test") {
                steps {
                  echo "============== start testing =================="
                    script{    
                          try {
                                sh "curl -Is http://localhost:8000/login | grep '200'"
                                echo "Yeah"
                                return true 
                          } catch (Exception e) {
                                return false
                          }
                    }
                   echo "============== Test Finished =================="
           }
               
            }
        stage("Deploy") {
                steps {
                    echo "============== start Deploy =================="
                    
                    echo "============== Deploy Finished ================== "
                    
                }
            }

        }

       
}
